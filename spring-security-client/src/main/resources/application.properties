spring.datasource.url=jdbc:mysql://localhost:3306/OauthImpl
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto =	update




# OAuth2 Client Registration
spring.security.oauth2.client.registration.api-client-oidc.provider=spring
spring.security.oauth2.client.registration.api-client-oidc.client-id=api-client
spring.security.oauth2.client.registration.api-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.api-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-oidc.redirect-uri=http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.api-client-oidc.scope=openid
spring.security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc

spring.security.oauth2.client.registration.api-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
spring.security.oauth2.client.registration.api-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.api-client-authorization-code.scope=api.read
spring.security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.spring.issuer-uri= http://localhost:9000